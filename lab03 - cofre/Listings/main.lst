


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Rev1: 10/03/2018
    5 00000000         ; Rev2: 10/04/2019
    6 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                        e/ou a chave USR_SW2.
    7 00000000         ; Caso o usuário pressione a chave USR_SW1, acenderá o L
                       ED3 (PF4). Caso o usuário pressione 
    8 00000000         ; a chave USR_SW2, acenderá o LED4 (PF0). Caso as duas c
                       haves sejam pressionadas, os dois 
    9 00000000         ; LEDs acendem.
   10 00000000         
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   13 00000000         ; ------------------------------------------------------
                       -------------------------
   14 00000000         ; Declarações EQU - Defines
   15 00000000         ;<NOME>         EQU <VALOR>
   16 00000000         ; ========================
   17 00000000         
   18 00000000         ; ------------------------------------------------------
                       -------------------------
   19 00000000         ; Área de Dados - Declarações de variáveis
   20 00000000                 AREA             DATA, ALIGN=2
   21 00000000         ; Se alguma variável for chamada em outro arquivo
   22 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   23 00000000         ; partir de outro arquivo
   24 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   25 00000000         ; de <tam> bytes a partir da primeira 
   26 00000000         ; posição da RAM  
   27 00000000         
   28 00000000         ; ------------------------------------------------------
                       -------------------------
   29 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   30 00000000         ;                  código
   31 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   32 00000000         
   33 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   34 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   35 00000000         ; outro arquivo. No caso startup.s
   36 00000000         
   37 00000000         ; Se chamar alguma função externa 
   38 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   39 00000000         ; função <func>
   40 00000000                 IMPORT           PLL_Init
   41 00000000                 IMPORT           SysTick_Init
   42 00000000                 IMPORT           SysTick_Wait1ms
   43 00000000         



ARM Macro Assembler    Page 2 


   44 00000000                 IMPORT           GPIO_Init
   45 00000000                 IMPORT           PortF_Output
   46 00000000                 IMPORT           PortJ_Input
   47 00000000                 IMPORT           GPIOPortJ_Handler
   48 00000000         
   49 00000000                 IMPORT           LCD_init
   50 00000000                 IMPORT           LCD_reset
   51 00000000                 IMPORT           LCD_command
   52 00000000                 IMPORT           LCD_write_data
   53 00000000                 IMPORT           LCD_print_string
   54 00000000         
   55 00000000                 IMPORT           MKBOARD_init
   56 00000000                 IMPORT           MKBOARD_getValuePressed
   57 00000000                 IMPORT           MKBOARD_valueToASCII
   58 00000000         
   59 00000000                 IMPORT           LEDS_AND_DISPLAYS_init
   60 00000000                 IMPORT           select_leds
   61 00000000                 IMPORT           select_dig_DS
   62 00000000                 IMPORT           turn_leds_ON
   63 00000000                 IMPORT           turn_DS1_ON
   64 00000000                 IMPORT           turn_DS2_ON
   65 00000000         
   66 00000000                 IMPORT           SysTick_Wait1us
   67 00000000         ; ========================
   68 00000000         ; Constantes
   69 00000000         
   70 00000000         ; ========================
   71 00000000         ; Ponteiros
   72 00000000 20000000 
                       ARRAY_PW_OPEN
                               EQU              0x20000000
   73 00000000         
   74 00000000         ; ------------------------------------------------------
                       -------------------------
   75 00000000         ; Função main() 
   76 00000000         Start
   77 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   78 00000004 F7FF FFFE       BL               SysTick_Init
   79 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   80 0000000C F7FF FFFE       BL               LCD_init
   81 00000010 F7FF FFFE       BL               MKBOARD_init
   82 00000014 F7FF FFFE       BL               LEDS_AND_DISPLAYS_init
   83 00000018         
   84 00000018 F04F 00FF       MOV              R0, #0xFF
   85 0000001C F7FF FFFE       BL               select_leds
   86 00000020 F7FF FFFE       BL               turn_leds_ON
   87 00000024 F7FF FFFE       BL               turn_DS1_ON
   88 00000028 F7FF FFFE       BL               turn_DS2_ON
   89 0000002C         
   90 0000002C         MainLoop
   91 0000002C 4827            LDR              R0, =MSG_OPEN
   92 0000002E F7FF FFFE       BL               LCD_print_string
   93 00000032         ; pega um valor do teclado
   94 00000032 F04F 00C0       MOV              R0, #0xC0



ARM Macro Assembler    Page 3 


   95 00000036 F7FF FFFE       BL               LCD_command
   96 0000003A 4825            LDR              R0, =MSG_PWscreen
   97 0000003C F7FF FFFE       BL               LCD_print_string
   98 00000040         wait_click
   99 00000040         
  100 00000040 F7FF FFFE       BL               MKBOARD_getValuePressed
  101 00000044 28FF            CMP              R0, #0xFF
  102 00000046 D0FB            BEQ              wait_click
  103 00000048 F7FF FFFE       BL               MKBOARD_valueToASCII
  104 0000004C F7FF FFFE       BL               LCD_write_data
  105 00000050 E7F6            B                wait_click
  106 00000052         
  107 00000052         
  108 00000052         Reset
  109 00000052 F7FF FFFE       BL               LCD_reset
  110 00000056 E7E9            B                MainLoop    ;Volta para o laço 
                                                            principal 
  111 00000058         
  112 00000058         ; ------------------------------------------------------
                       -------------------------
  113 00000058         
  114 00000058 44 45 55 
              20 42 4F 
              41 20 31 
              00       STR1    DCB              "DEU BOA 1",0
  115 00000062 44 45 55 
              20 42 4F 
              41 20 32 
              00       STR2    DCB              "DEU BOA 2", 0
  116 0000006C         ;STR2 DCB 'n','o','m','e',0
  117 0000006C 53 65 6D 
              20 56 61 
              6C 6F 72 
              21 00    MSG_NENHUM_VALOR
                               DCB              "Sem Valor!",0
  118 00000077 43 6F 66 
              72 65 20 
              41 62 65 
              72 74 6F 
              20 3A 29 
              20 21 00 MSG_OPEN
                               DCB              "Cofre Aberto :) !",0
  119 00000089 43 6F 66 
              72 65 20 
              41 62 72 
              69 6E 64 
              6F 00    MSG_OPENING
                               DCB              "Cofre Abrindo",0
  120 00000097 43 6F 66 
              72 65 20 
              46 65 63 
              68 61 6E 
              64 6F 00 MSG_CLOSING
                               DCB              "Cofre Fechando",0
  121 000000A6 43 6F 66 
              72 65 20 
              46 65 63 
              68 61 64 
              6F 21 00 MSG_CLOSED



ARM Macro Assembler    Page 4 


                               DCB              "Cofre Fechado!",0
  122 000000B5 43 6F 66 
              72 65 20 
              54 72 61 
              76 61 64 
              6F 21 00 MSG_LOCKED
                               DCB              "Cofre Travado!",0
  123 000000C4 20 50 57 
              3A 00    MSG_PWscreen
                               DCB              " PW:",0
  124 000000C9         
  125 000000C9 00 00 00        ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  126 000000CC                 END                          ;Fim do arquivo
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\main.d -o.\objects\main.o -IC:\Users\alfon\AppData\Local\Arm
\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1" -
-predefine="__UVISION_VERSION SETA 538" --predefine="TM4C1294NCPDT SETA 1" --li
st=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: .text unused
MSG_CLOSED 000000A6

Symbol: MSG_CLOSED
   Definitions
      At line 121 in file main.s
   Uses
      None
Comment: MSG_CLOSED unused
MSG_CLOSING 00000097

Symbol: MSG_CLOSING
   Definitions
      At line 120 in file main.s
   Uses
      None
Comment: MSG_CLOSING unused
MSG_LOCKED 000000B5

Symbol: MSG_LOCKED
   Definitions
      At line 122 in file main.s
   Uses
      None
Comment: MSG_LOCKED unused
MSG_NENHUM_VALOR 0000006C

Symbol: MSG_NENHUM_VALOR
   Definitions
      At line 117 in file main.s
   Uses
      None
Comment: MSG_NENHUM_VALOR unused
MSG_OPEN 00000077

Symbol: MSG_OPEN
   Definitions
      At line 118 in file main.s
   Uses
      At line 91 in file main.s
Comment: MSG_OPEN used once
MSG_OPENING 00000089

Symbol: MSG_OPENING
   Definitions
      At line 119 in file main.s
   Uses
      None
Comment: MSG_OPENING unused
MSG_PWscreen 000000C4

Symbol: MSG_PWscreen



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 123 in file main.s
   Uses
      At line 96 in file main.s
Comment: MSG_PWscreen used once
MainLoop 0000002C

Symbol: MainLoop
   Definitions
      At line 90 in file main.s
   Uses
      At line 110 in file main.s
Comment: MainLoop used once
Reset 00000052

Symbol: Reset
   Definitions
      At line 108 in file main.s
   Uses
      None
Comment: Reset unused
STR1 00000058

Symbol: STR1
   Definitions
      At line 114 in file main.s
   Uses
      None
Comment: STR1 unused
STR2 00000062

Symbol: STR2
   Definitions
      At line 115 in file main.s
   Uses
      None
Comment: STR2 unused
Start 00000000

Symbol: Start
   Definitions
      At line 76 in file main.s
   Uses
      At line 34 in file main.s
Comment: Start used once
wait_click 00000040

Symbol: wait_click
   Definitions
      At line 98 in file main.s
   Uses
      At line 102 in file main.s
      At line 105 in file main.s

14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ARRAY_PW_OPEN 20000000

Symbol: ARRAY_PW_OPEN
   Definitions
      At line 72 in file main.s
   Uses
      None
Comment: ARRAY_PW_OPEN unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIOPortJ_Handler 00000000

Symbol: GPIOPortJ_Handler
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: GPIOPortJ_Handler unused
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 79 in file main.s
Comment: GPIO_Init used once
LCD_command 00000000

Symbol: LCD_command
   Definitions
      At line 51 in file main.s
   Uses
      At line 95 in file main.s
Comment: LCD_command used once
LCD_init 00000000

Symbol: LCD_init
   Definitions
      At line 49 in file main.s
   Uses
      At line 80 in file main.s
Comment: LCD_init used once
LCD_print_string 00000000

Symbol: LCD_print_string
   Definitions
      At line 53 in file main.s
   Uses
      At line 92 in file main.s
      At line 97 in file main.s

LCD_reset 00000000

Symbol: LCD_reset
   Definitions
      At line 50 in file main.s
   Uses
      At line 109 in file main.s
Comment: LCD_reset used once
LCD_write_data 00000000

Symbol: LCD_write_data
   Definitions
      At line 52 in file main.s
   Uses
      At line 104 in file main.s
Comment: LCD_write_data used once
LEDS_AND_DISPLAYS_init 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: LEDS_AND_DISPLAYS_init
   Definitions
      At line 59 in file main.s
   Uses
      At line 82 in file main.s
Comment: LEDS_AND_DISPLAYS_init used once
MKBOARD_getValuePressed 00000000

Symbol: MKBOARD_getValuePressed
   Definitions
      At line 56 in file main.s
   Uses
      At line 100 in file main.s
Comment: MKBOARD_getValuePressed used once
MKBOARD_init 00000000

Symbol: MKBOARD_init
   Definitions
      At line 55 in file main.s
   Uses
      At line 81 in file main.s
Comment: MKBOARD_init used once
MKBOARD_valueToASCII 00000000

Symbol: MKBOARD_valueToASCII
   Definitions
      At line 57 in file main.s
   Uses
      At line 103 in file main.s
Comment: MKBOARD_valueToASCII used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 40 in file main.s
   Uses
      At line 77 in file main.s
Comment: PLL_Init used once
PortF_Output 00000000

Symbol: PortF_Output
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: PortF_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: PortJ_Input unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 41 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

   Uses
      At line 78 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: SysTick_Wait1ms unused
SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: SysTick_Wait1us unused
select_dig_DS 00000000

Symbol: select_dig_DS
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: select_dig_DS unused
select_leds 00000000

Symbol: select_leds
   Definitions
      At line 60 in file main.s
   Uses
      At line 85 in file main.s
Comment: select_leds used once
turn_DS1_ON 00000000

Symbol: turn_DS1_ON
   Definitions
      At line 63 in file main.s
   Uses
      At line 87 in file main.s
Comment: turn_DS1_ON used once
turn_DS2_ON 00000000

Symbol: turn_DS2_ON
   Definitions
      At line 64 in file main.s
   Uses
      At line 88 in file main.s
Comment: turn_DS2_ON used once
turn_leds_ON 00000000

Symbol: turn_leds_ON
   Definitions
      At line 62 in file main.s
   Uses
      At line 86 in file main.s
Comment: turn_leds_ON used once



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols

22 symbols
374 symbols in table
