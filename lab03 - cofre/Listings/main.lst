


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Rev1: 10/03/2018
    5 00000000         ; Rev2: 10/04/2019
    6 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                        e/ou a chave USR_SW2.
    7 00000000         ; Caso o usuário pressione a chave USR_SW1, acenderá o L
                       ED3 (PF4). Caso o usuário pressione 
    8 00000000         ; a chave USR_SW2, acenderá o LED4 (PF0). Caso as duas c
                       haves sejam pressionadas, os dois 
    9 00000000         ; LEDs acendem.
   10 00000000         
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   13 00000000         ; ------------------------------------------------------
                       -------------------------
   14 00000000         ; Declarações EQU - Defines
   15 00000000         ;<NOME>         EQU <VALOR>
   16 00000000         ; ========================
   17 00000000         
   18 00000000         ; ------------------------------------------------------
                       -------------------------
   19 00000000         ; Área de Dados - Declarações de variáveis
   20 00000000                 AREA             DATA, ALIGN=2
   21 00000000         ; Se alguma variável for chamada em outro arquivo
   22 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   23 00000000         ; partir de outro arquivo
   24 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   25 00000000         ; de <tam> bytes a partir da primeira 
   26 00000000         ; posição da RAM  
   27 00000000         
   28 00000000         ; ------------------------------------------------------
                       -------------------------
   29 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   30 00000000         ;                  código
   31 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   32 00000000         
   33 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   34 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   35 00000000         ; outro arquivo. No caso startup.s
   36 00000000         
   37 00000000         ; Se chamar alguma função externa 
   38 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   39 00000000         ; função <func>
   40 00000000                 IMPORT           PLL_Init
   41 00000000                 IMPORT           SysTick_Init
   42 00000000                 IMPORT           SysTick_Wait1ms
   43 00000000         



ARM Macro Assembler    Page 2 


   44 00000000                 IMPORT           GPIO_Init
   45 00000000                 IMPORT           PortF_Output
   46 00000000                 IMPORT           PortJ_Input
   47 00000000                 IMPORT           GPIOPortJ_Handler
   48 00000000         
   49 00000000                 IMPORT           LCD_init
   50 00000000                 IMPORT           LCD_reset
   51 00000000                 IMPORT           LCD_command
   52 00000000                 IMPORT           LCD_write_data
   53 00000000                 IMPORT           LCD_print_string
   54 00000000         
   55 00000000                 IMPORT           MKBOARD_init
   56 00000000                 IMPORT           MKBOARD_getValuePressed
   57 00000000                 IMPORT           MKBOARD_valueToASCII
   58 00000000         
   59 00000000                 IMPORT           SysTick_Wait1us
   60 00000000         
   61 00000000         ; ------------------------------------------------------
                       -------------------------
   62 00000000         ; Função main()
   63 00000000         Start
   64 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   65 00000004 F7FF FFFE       BL               SysTick_Init
   66 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   67 0000000C F7FF FFFE       BL               LCD_init
   68 00000010 F7FF FFFE       BL               MKBOARD_init
   69 00000014         
   70 00000014 4826            LDR              R0, =STR1
   71 00000016 F7FF FFFE       BL               LCD_print_string
   72 0000001A F44F 707A       MOV              R0, #1000
   73 0000001E F7FF FFFE       BL               SysTick_Wait1ms
   74 00000022 F7FF FFFE       BL               LCD_reset
   75 00000026         
   76 00000026         MainLoop
   77 00000026         
   78 00000026         ; pega um valor do teclado
   79 00000026 F7FF FFFE       BL               MKBOARD_getValuePressed
   80 0000002A         
   81 0000002A 28FF            CMP              R0, #0xFF
   82 0000002C D0FB            BEQ              MainLoop
   83 0000002E 280F            CMP              R0, #0xF
   84 00000030 D004            BEQ              Reset
   85 00000032 F7FF FFFE       BL               MKBOARD_valueToASCII
   86 00000036 F7FF FFFE       BL               LCD_write_data
   87 0000003A E7F4            B                MainLoop
   88 0000003C         
   89 0000003C         Reset
   90 0000003C F7FF FFFE       BL               LCD_reset
   91 00000040 E7F1            B                MainLoop    ;Volta para o laço 
                                                            principal 
   92 00000042         
   93 00000042         ; ------------------------------------------------------
                       -------------------------
   94 00000042         



ARM Macro Assembler    Page 3 


   95 00000042 44 45 55 
              20 42 4F 
              41 20 31 
              00       STR1    DCB              "DEU BOA 1",0
   96 0000004C 44 45 55 
              20 42 4F 
              41 20 32 
              00       STR2    DCB              "DEU BOA 2", 0
   97 00000056         ;STR2 DCB 'n','o','m','e',0
   98 00000056 53 65 6D 
              20 56 61 
              6C 6F 72 
              21 00    MSG_NENHUM_VALOR
                               DCB              "Sem Valor!",0
   99 00000061 43 6F 66 
              72 65 20 
              41 62 65 
              72 74 6F 
              20 3A 29 
              20 21 00 MSG_OPEN
                               DCB              "Cofre Aberto :) !",0
  100 00000073 43 6F 66 
              72 65 20 
              41 62 72 
              69 6E 64 
              6F 00    MSG_OPENING
                               DCB              "Cofre Abrindo",0
  101 00000081 43 6F 66 
              72 65 20 
              46 65 63 
              68 61 6E 
              64 6F 00 MSG_CLOSING
                               DCB              "Cofre Fechando",0
  102 00000090 43 6F 66 
              72 65 20 
              46 65 63 
              68 61 64 
              6F 21 00 MSG_CLOSED
                               DCB              "Cofre Fechado!",0
  103 0000009F 43 6F 66 
              72 65 20 
              54 72 61 
              76 61 64 
              6F 21 00 MSG_LOCKED
                               DCB              "Cofre Travado!",0
  104 000000AE         
  105 000000AE 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  106 000000B0                 END                          ;Fim do arquivo
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\roger\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: .text unused
MSG_CLOSED 00000090

Symbol: MSG_CLOSED
   Definitions
      At line 102 in file main.s
   Uses
      None
Comment: MSG_CLOSED unused
MSG_CLOSING 00000081

Symbol: MSG_CLOSING
   Definitions
      At line 101 in file main.s
   Uses
      None
Comment: MSG_CLOSING unused
MSG_LOCKED 0000009F

Symbol: MSG_LOCKED
   Definitions
      At line 103 in file main.s
   Uses
      None
Comment: MSG_LOCKED unused
MSG_NENHUM_VALOR 00000056

Symbol: MSG_NENHUM_VALOR
   Definitions
      At line 98 in file main.s
   Uses
      None
Comment: MSG_NENHUM_VALOR unused
MSG_OPEN 00000061

Symbol: MSG_OPEN
   Definitions
      At line 99 in file main.s
   Uses
      None
Comment: MSG_OPEN unused
MSG_OPENING 00000073

Symbol: MSG_OPENING
   Definitions
      At line 100 in file main.s
   Uses
      None
Comment: MSG_OPENING unused
MainLoop 00000026

Symbol: MainLoop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 76 in file main.s
   Uses
      At line 82 in file main.s
      At line 87 in file main.s
      At line 91 in file main.s

Reset 0000003C

Symbol: Reset
   Definitions
      At line 89 in file main.s
   Uses
      At line 84 in file main.s
Comment: Reset used once
STR1 00000042

Symbol: STR1
   Definitions
      At line 95 in file main.s
   Uses
      At line 70 in file main.s
Comment: STR1 used once
STR2 0000004C

Symbol: STR2
   Definitions
      At line 96 in file main.s
   Uses
      None
Comment: STR2 unused
Start 00000000

Symbol: Start
   Definitions
      At line 63 in file main.s
   Uses
      At line 34 in file main.s
Comment: Start used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIOPortJ_Handler 00000000

Symbol: GPIOPortJ_Handler
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: GPIOPortJ_Handler unused
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 66 in file main.s
Comment: GPIO_Init used once
LCD_command 00000000

Symbol: LCD_command
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: LCD_command unused
LCD_init 00000000

Symbol: LCD_init
   Definitions
      At line 49 in file main.s
   Uses
      At line 67 in file main.s
Comment: LCD_init used once
LCD_print_string 00000000

Symbol: LCD_print_string
   Definitions
      At line 53 in file main.s
   Uses
      At line 71 in file main.s
Comment: LCD_print_string used once
LCD_reset 00000000

Symbol: LCD_reset
   Definitions
      At line 50 in file main.s
   Uses
      At line 74 in file main.s
      At line 90 in file main.s

LCD_write_data 00000000

Symbol: LCD_write_data
   Definitions
      At line 52 in file main.s
   Uses
      At line 86 in file main.s
Comment: LCD_write_data used once
MKBOARD_getValuePressed 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: MKBOARD_getValuePressed
   Definitions
      At line 56 in file main.s
   Uses
      At line 79 in file main.s
Comment: MKBOARD_getValuePressed used once
MKBOARD_init 00000000

Symbol: MKBOARD_init
   Definitions
      At line 55 in file main.s
   Uses
      At line 68 in file main.s
Comment: MKBOARD_init used once
MKBOARD_valueToASCII 00000000

Symbol: MKBOARD_valueToASCII
   Definitions
      At line 57 in file main.s
   Uses
      At line 85 in file main.s
Comment: MKBOARD_valueToASCII used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 40 in file main.s
   Uses
      At line 64 in file main.s
Comment: PLL_Init used once
PortF_Output 00000000

Symbol: PortF_Output
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: PortF_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: PortJ_Input unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 65 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 42 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

   Uses
      At line 73 in file main.s
Comment: SysTick_Wait1ms used once
SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: SysTick_Wait1us unused
16 symbols
365 symbols in table
