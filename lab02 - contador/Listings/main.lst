


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Programa referente ao Lab 01 da turma de microcontrola
                       dores 2023.1
    4 00000000         ; Programa incrementado a partir do projeto GPIO2 da aul
                       a de GPIO do professor Peron.
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ========================
   12 00000000 00000001 
                       TRUE    EQU              0x1
   13 00000000 00000000 
                       FALSE   EQU              0x0
   14 00000000         
   15 00000000 20000000 
                       UNIDADE EQU              0x20000000  ;4bits
   16 00000000 2000000F 
                       DEZENA  EQU              0x2000000f  ;4bits
   17 00000000 2000001E 
                       PASSO_VALOR
                               EQU              0x2000001e  ;4bits
   18 00000000 2000002D 
                       LED_CRESCENTE
                               EQU              0x2000002d  ;4bits
   19 00000000 2000004B 
                       LED_ATUAL
                               EQU              0x2000004b  ;8bits
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Área de Dados - Declarações de variáveis
   23 00000000                 AREA             DATA, ALIGN=2
   24 00000000         ; Se alguma variável for chamada em outro arquivo
   25 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   26 00000000         ; partir de outro arquivo
   27 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   28 00000000         ; de <tam> bytes a partir da primeira 
   29 00000000         ; posição da RAM  
   30 00000000         
   31 00000000         ; ------------------------------------------------------
                       -------------------------
   32 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   33 00000000         ;                  código
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000         
   36 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   37 00000000                 EXPORT           Start       ; Permite chamar a 



ARM Macro Assembler    Page 2 


                                                            função Start a part
                                                            ir de 
   38 00000000         ; outro arquivo. No caso startup.s
   39 00000000         
   40 00000000         ; Se chamar alguma função externa 
   41 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   42 00000000         ; função <func>
   43 00000000                 IMPORT           PLL_Init
   44 00000000                 IMPORT           SysTick_Init
   45 00000000                 IMPORT           SysTick_Wait1ms
   46 00000000                 IMPORT           GPIO_Init
   47 00000000                 IMPORT           PortF_Output
   48 00000000                 IMPORT           PortJ_Input
   49 00000000                 IMPORT           select_leds
   50 00000000                 IMPORT           set_leds
   51 00000000                 IMPORT           set_DS1_ON
   52 00000000                 IMPORT           set_DS2_ON
   53 00000000                 IMPORT           select_dig_DS
   54 00000000         
   55 00000000         
   56 00000000         ; ------------------------------------------------------
                       -------------------------
   57 00000000         ; Função main()
   58 00000000         Start
   59 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   60 00000004 F7FF FFFE       BL               SysTick_Init
   61 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   62 0000000C         
   63 0000000C         ; inicializacao das variaveis
   64 0000000C F04F 5000       LDR              R0, =UNIDADE
   65 00000010 F04F 0109       MOV              R1, #9
   66 00000014 6001            STR              R1, [R0]
   67 00000016         
   68 00000016 4887            LDR              R0, =DEZENA
   69 00000018 F04F 0109       MOV              R1, #9
   70 0000001C 6001            STR              R1, [R0]
   71 0000001E         
   72 0000001E 4886            LDR              R0, =PASSO_VALOR
   73 00000020 F04F 0101       MOV              R1, #1
   74 00000024 6001            STR              R1, [R0]
   75 00000026         
   76 00000026 4885            LDR              R0, =LED_ATUAL
   77 00000028 F04F 0140       MOV              R1, #2_01000000
   78 0000002C 6001            STR              R1, [R0]
   79 0000002E         
   80 0000002E 4884            LDR              R0, =LED_CRESCENTE
   81 00000030 F04F 0100       MOV              R1, #FALSE
   82 00000034 6001            STR              R1, [R0]
   83 00000036         
   84 00000036         MainLoop
   85 00000036 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 



ARM Macro Assembler    Page 3 


                                                            resultado em R0
   86 0000003A         Verifica_SW2
   87 0000003A 2801            CMP              R0, #2_00000001 ;Verifica se so
                                                            mente a chave SW2 e
                                                            stá pressionada
   88 0000003C D002            BEQ              SW2_pressionada
   89 0000003E         Verifica_SW1
   90 0000003E 2802            CMP              R0, #2_00000010
   91 00000040 D003            BEQ              SW1_pressionada
   92 00000042 E004            B                end_loop
   93 00000044         SW2_pressionada
   94 00000044 F000 F856       BL               operacao_pausada
   95 00000048 E7F5            B                MainLoop
   96 0000004A         SW1_pressionada
   97 0000004A F000 F803       BL               select_next_passo_valor
   98 0000004E         end_loop
   99 0000004E F000 F830       BL               operacao_normal
  100 00000052 E7F0            B                MainLoop
  101 00000054         
  102 00000054         ; ------------------------------------------------------
                       -------------------------
  103 00000054         ; Função select_next_passo_valor
  104 00000054         ; Parâmetro de entrada: Não tem
  105 00000054         ; Parâmetro de saída: Não tem
  106 00000054         select_next_passo_valor
  107 00000054 4978            LDR              R1, =PASSO_VALOR
  108 00000056 6808            LDR              R0, [R1]    ;coleta o passo do 
                                                            valor
  109 00000058 F100 0001       ADD              R0, #1      ;soma o valor do pa
                                                            sso
  110 0000005C 280A            CMP              R0, #10     ;verifica se passo 
                                                            passou de 10
  111 0000005E BF08 2001       MOVEQ            R0, #1      ;reseta o passo
  112 00000062 6008            STR              R0, [R1]    ;armazena novo valo
                                                            r do passo
  113 00000064 4770            BX               LR
  114 00000066         
  115 00000066         ; ------------------------------------------------------
                       -------------------------
  116 00000066         ; Função select_next_valor
  117 00000066         ; Parâmetro de entrada: Não tem
  118 00000066         ; Parâmetro de saída: Não tem
  119 00000066         select_next_valor
  120 00000066 F04F 5100       LDR              R1, =UNIDADE
  121 0000006A 6808            LDR              R0, [R1]    ;coleta valor da un
                                                            idade
  122 0000006C 4B71            LDR              R3, =DEZENA
  123 0000006E 681A            LDR              R2, [R3]    ;coleta valor da de
                                                            zena
  124 00000070 4D71            LDR              R5, =PASSO_VALOR
  125 00000072 682C            LDR              R4, [R5]    ;coleta valor do pa
                                                            sso
  126 00000074 4420            ADD              R0, R4      ;incrementa passo
  127 00000076 280A            CMP              R0, #10     ;verifica se passou
                                                             unidade de 10
  128 00000078 BF24            ITT              CS          ;se unidade >= 10
  129 0000007A 380A            SUBCS            R0, #10     ;diminui 10 da unid
                                                            ade
  130 0000007C 3201            ADDCS            R2, #1      ;soma 1 a dezena



ARM Macro Assembler    Page 4 


  131 0000007E 2A0A            CMP              R2, #10     ;verifica se dezena
                                                             passou de 10
  132 00000080 BF08 2200       MOVEQ            R2, #0      ;se dezena >= 10, r
                                                            eseta dezena
  133 00000084 6008            STR              R0, [R1]    ;armazena novo valo
                                                            r da unidade
  134 00000086 601A            STR              R2, [R3]    ;armazena novo valo
                                                            r da dezena
  135 00000088 4770            BX               LR
  136 0000008A         
  137 0000008A         ; ------------------------------------------------------
                       -------------------------
  138 0000008A         ; Função select_next_led
  139 0000008A         ; Parâmetro de entrada: Não tem
  140 0000008A         ; Parâmetro de saída: Não tem
  141 0000008A         select_next_led
  142 0000008A 496C            LDR              R1, =LED_ATUAL
  143 0000008C 6808            LDR              R0, [R1]    ;coleta bits do led
                                                             atual
  144 0000008E 4B6C            LDR              R3, =LED_CRESCENTE
  145 00000090 681A            LDR              R2, [R3]    ;coleta passo do le
                                                            d
  146 00000092 2A01            CMP              R2, #TRUE   ;verifica se esta c
                                                            rescente
  147 00000094 D103            BNE              led_decrescente ;pula se ele fo
                                                            r decrescente
  148 00000096 2801            CMP              R0, #2_00000001 ;eh crescente, 
                                                            verifica se esta no
                                                             ultimo bit
  149 00000098 BF08 2200       MOVEQ            R2, #FALSE  ;se esta no ultimo 
                                                            bit, inverte para d
                                                            ecrescente
  150 0000009C E002            B                select_next_led_end ;pula para 
                                                            atualizar o valor d
                                                            o led
  151 0000009E         led_decrescente
  152 0000009E 2880            CMP              R0, #2_10000000 ;eh decrescente
                                                            , verifica se esta 
                                                            no ultimo bit
  153 000000A0 BF08 2201       MOVEQ            R2, #TRUE   ;se esta no ultimo 
                                                            bit, inverte para c
                                                            rescente
  154 000000A4         select_next_led_end                  ;atualiza valor do 
                                                            led
  155 000000A4 2A01            CMP              R2, #TRUE   ;verifica se eh cre
                                                            scente ou decrescen
                                                            te
  156 000000A6 BF0C            ITE              EQ
  157 000000A8 0840            LSREQ            R0, R0, #1  ;shifta para direit
                                                            a
  158 000000AA 0040            LSLNE            R0, R0, #1  ;shifta para esquer
                                                            da
  159 000000AC 6008            STR              R0, [R1]    ;armazena os bits d
                                                            o led
  160 000000AE 601A            STR              R2, [R3]    ;armazena se eh cre
                                                            scente ou decrescen
                                                            te
  161 000000B0 4770            BX               LR
  162 000000B2         



ARM Macro Assembler    Page 5 


  163 000000B2         
  164 000000B2         ; ------------------------------------------------------
                       -------------------------
  165 000000B2         ; Função operacao_normal
  166 000000B2         ; Parâmetro de entrada: Não tem
  167 000000B2         ; Parâmetro de saída: Não tem
  168 000000B2         operacao_normal
  169 000000B2 B500            PUSH             {LR}
  170 000000B4 F7FF FFD7       BL               select_next_valor
  171 000000B8 F85D EB04       POP              {LR}
  172 000000BC         
  173 000000BC B500            PUSH             {LR}
  174 000000BE F7FF FFE4       BL               select_next_led
  175 000000C2 F85D EB04       POP              {LR}
  176 000000C6         ;reseta o timer
  177 000000C6 F04F 0A00       MOV              R10, #0
  178 000000CA         piscar_normal
  179 000000CA B500            PUSH             {LR}
  180 000000CC F000 F844       BL               pisca_led
  181 000000D0 F85D EB04       POP              {LR}
  182 000000D4         
  183 000000D4 B500            PUSH             {LR}
  184 000000D6 F000 F888       BL               pisca_dezena
  185 000000DA F85D EB04       POP              {LR}
  186 000000DE         
  187 000000DE B500            PUSH             {LR}
  188 000000E0 F000 F85E       BL               pisca_unidade
  189 000000E4 F85D EB04       POP              {LR}
  190 000000E8         
  191 000000E8 F10A 0A06       ADD              R10, R10, #6 ;soma 6ms ao timer
                                                            
  192 000000EC F5BA 7FFA       CMP              R10, #500   ;verifica se passou
                                                             500 ms
  193 000000F0 D3EB            BLO              piscar_normal
  194 000000F2 4770            BX               LR
  195 000000F4         
  196 000000F4         ; ------------------------------------------------------
                       -------------------------
  197 000000F4         ; Função operacao_pausada
  198 000000F4         ; Parâmetro de entrada: Não tem
  199 000000F4         ; Parâmetro de saída: Não tem
  200 000000F4         operacao_pausada
  201 000000F4         ;reseta o timer
  202 000000F4 F04F 0A00       MOV              R10, #0
  203 000000F8         piscar_pausado
  204 000000F8         
  205 000000F8         ;seleciona todos os leds
  206 000000F8 F04F 00FF       MOV              R0, #2_11111111
  207 000000FC B500            PUSH             {LR}
  208 000000FE F7FF FFFE       BL               select_leds
  209 00000102 F85D EB04       POP              {LR}
  210 00000106         
  211 00000106         ;verifica se fica ligado ou desligado
  212 00000106 F1BA 0FFA       CMP              R10, #250
  213 0000010A D307            BLO              leds_pausado_ligado
  214 0000010C         ;leds desligados
  215 0000010C F04F 0000       LDR              R0, =FALSE
  216 00000110 B500            PUSH             {LR}
  217 00000112 F7FF FFFE       BL               set_leds



ARM Macro Assembler    Page 6 


  218 00000116 F85D EB04       POP              {LR}
  219 0000011A E006            B                valor_pausado
  220 0000011C         leds_pausado_ligado
  221 0000011C F04F 0001       LDR              R0, =TRUE
  222 00000120 B500            PUSH             {LR}
  223 00000122 F7FF FFFE       BL               set_leds
  224 00000126 F85D EB04       POP              {LR}
  225 0000012A         valor_pausado
  226 0000012A         ; delay de 1 ms
  227 0000012A F04F 0001       MOV              R0, #1
  228 0000012E B500            PUSH             {LR}
  229 00000130 F7FF FFFE       BL               SysTick_Wait1ms
  230 00000134 F85D EB04       POP              {LR}
  231 00000138         
  232 00000138 B500            PUSH             {LR}
  233 0000013A F000 F856       BL               pisca_dezena
  234 0000013E F85D EB04       POP              {LR}
  235 00000142         
  236 00000142 B500            PUSH             {LR}
  237 00000144 F000 F82C       BL               pisca_unidade
  238 00000148 F85D EB04       POP              {LR}
  239 0000014C         
  240 0000014C F10A 0A05       ADD              R10, R10, #5 ;soma 5ms ao timer
                                                            
  241 00000150 F5BA 7FFA       CMP              R10, #500   ;verifica se passou
                                                             500 ms
  242 00000154 D3D0            BLO              piscar_pausado
  243 00000156 4770            BX               LR
  244 00000158         
  245 00000158         ; ------------------------------------------------------
                       -------------------------
  246 00000158         ; Função pisca_led
  247 00000158         ; Parâmetro de entrada: Não tem
  248 00000158         ; Parâmetro de saída: Não tem
  249 00000158         pisca_led
  250 00000158         ;seleciona os leds
  251 00000158 4938            LDR              R1, =LED_ATUAL
  252 0000015A 6808            LDR              R0, [R1]
  253 0000015C B500            PUSH             {LR}
  254 0000015E F7FF FFFE       BL               select_leds
  255 00000162 F85D EB04       POP              {LR}
  256 00000166         
  257 00000166         ; liga leds
  258 00000166 F04F 0001       MOV              R0, #TRUE
  259 0000016A B500            PUSH             {LR}
  260 0000016C F7FF FFFE       BL               set_leds
  261 00000170 F85D EB04       POP              {LR}
  262 00000174         
  263 00000174         ; delay de 1 ms
  264 00000174 F04F 0001       MOV              R0, #1
  265 00000178 B500            PUSH             {LR}
  266 0000017A F7FF FFFE       BL               SysTick_Wait1ms
  267 0000017E F85D EB04       POP              {LR}
  268 00000182         
  269 00000182         ; desliga leds
  270 00000182 F04F 0000       MOV              R0, #FALSE
  271 00000186 B500            PUSH             {LR}
  272 00000188 F7FF FFFE       BL               set_leds
  273 0000018C F85D EB04       POP              {LR}



ARM Macro Assembler    Page 7 


  274 00000190         
  275 00000190         ; delay de 1 ms
  276 00000190 F04F 0001       MOV              R0, #1
  277 00000194 B500            PUSH             {LR}
  278 00000196 F7FF FFFE       BL               SysTick_Wait1ms
  279 0000019A F85D EB04       POP              {LR}
  280 0000019E         
  281 0000019E 4770            BX               LR          ;return
  282 000001A0         
  283 000001A0         ; ------------------------------------------------------
                       -------------------------
  284 000001A0         ; Função pisca_unidade
  285 000001A0         ; Parâmetro de entrada: Não tem
  286 000001A0         ; Parâmetro de saída: Não tem
  287 000001A0         pisca_unidade
  288 000001A0         ; seleciona unidade
  289 000001A0 F04F 5100       LDR              R1, =UNIDADE
  290 000001A4 6808            LDR              R0, [R1]
  291 000001A6 B500            PUSH             {LR}
  292 000001A8 F7FF FFFE       BL               select_dig_DS
  293 000001AC F85D EB04       POP              {LR}
  294 000001B0         
  295 000001B0         ; acende unidade
  296 000001B0 F04F 0001       MOV              R0, #TRUE
  297 000001B4 B500            PUSH             {LR}
  298 000001B6 F7FF FFFE       BL               set_DS2_ON
  299 000001BA F85D EB04       POP              {LR}
  300 000001BE         
  301 000001BE         ; espera 1 ms
  302 000001BE F04F 0001       MOV              R0, #1
  303 000001C2 B500            PUSH             {LR}
  304 000001C4 F7FF FFFE       BL               SysTick_Wait1ms
  305 000001C8 F85D EB04       POP              {LR}
  306 000001CC         
  307 000001CC         ; desliga unidade
  308 000001CC F04F 0000       MOV              R0, #FALSE
  309 000001D0 B500            PUSH             {LR}
  310 000001D2 F7FF FFFE       BL               set_DS2_ON
  311 000001D6 F85D EB04       POP              {LR}
  312 000001DA         
  313 000001DA         ; espera 1 ms
  314 000001DA F04F 0001       MOV              R0, #1
  315 000001DE B500            PUSH             {LR}
  316 000001E0 F7FF FFFE       BL               SysTick_Wait1ms
  317 000001E4 F85D EB04       POP              {LR}
  318 000001E8         
  319 000001E8 4770            BX               LR          ; return
  320 000001EA         
  321 000001EA         ; ------------------------------------------------------
                       -------------------------
  322 000001EA         ; Função pisca_dezena
  323 000001EA         ; Parâmetro de entrada: Não tem
  324 000001EA         ; Parâmetro de saída: Não tem
  325 000001EA         pisca_dezena
  326 000001EA         ;seleciona dezena
  327 000001EA 4912            LDR              R1, =DEZENA
  328 000001EC 6808            LDR              R0, [R1]
  329 000001EE B500            PUSH             {LR}
  330 000001F0 F7FF FFFE       BL               select_dig_DS



ARM Macro Assembler    Page 8 


  331 000001F4 F85D EB04       POP              {LR}
  332 000001F8         
  333 000001F8         ; acende dezena
  334 000001F8 F04F 0001       MOV              R0, #TRUE
  335 000001FC B500            PUSH             {LR}
  336 000001FE F7FF FFFE       BL               set_DS1_ON
  337 00000202 F85D EB04       POP              {LR}
  338 00000206         
  339 00000206         ; espera 1 ms
  340 00000206 F04F 0001       MOV              R0, #1
  341 0000020A B500            PUSH             {LR}
  342 0000020C F7FF FFFE       BL               SysTick_Wait1ms
  343 00000210 F85D EB04       POP              {LR}
  344 00000214         
  345 00000214         ; desliga dezena
  346 00000214 F04F 0000       MOV              R0, #FALSE
  347 00000218 B500            PUSH             {LR}
  348 0000021A F7FF FFFE       BL               set_DS1_ON
  349 0000021E F85D EB04       POP              {LR}
  350 00000222         
  351 00000222         ; espera 1 ms
  352 00000222 F04F 0001       MOV              R0, #1
  353 00000226 B500            PUSH             {LR}
  354 00000228 F7FF FFFE       BL               SysTick_Wait1ms
  355 0000022C F85D EB04       POP              {LR}
  356 00000230         
  357 00000230 4770            BX               LR
  358 00000232         
  359 00000232         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  360 00000232         ; Fim do Arquivo
  361 00000232         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  362 00000232 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  363 00000234                 END                          ;Fim do arquivo
              2000000F 
              2000001E 
              2000004B 
              2000002D 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\roger\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 00000036

Symbol: MainLoop
   Definitions
      At line 84 in file main.s
   Uses
      At line 95 in file main.s
      At line 100 in file main.s

SW1_pressionada 0000004A

Symbol: SW1_pressionada
   Definitions
      At line 96 in file main.s
   Uses
      At line 91 in file main.s
Comment: SW1_pressionada used once
SW2_pressionada 00000044

Symbol: SW2_pressionada
   Definitions
      At line 93 in file main.s
   Uses
      At line 88 in file main.s
Comment: SW2_pressionada used once
Start 00000000

Symbol: Start
   Definitions
      At line 58 in file main.s
   Uses
      At line 37 in file main.s
Comment: Start used once
Verifica_SW1 0000003E

Symbol: Verifica_SW1
   Definitions
      At line 89 in file main.s
   Uses
      None
Comment: Verifica_SW1 unused
Verifica_SW2 0000003A

Symbol: Verifica_SW2
   Definitions
      At line 86 in file main.s
   Uses
      None
Comment: Verifica_SW2 unused
end_loop 0000004E




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: end_loop
   Definitions
      At line 98 in file main.s
   Uses
      At line 92 in file main.s
Comment: end_loop used once
led_decrescente 0000009E

Symbol: led_decrescente
   Definitions
      At line 151 in file main.s
   Uses
      At line 147 in file main.s
Comment: led_decrescente used once
leds_pausado_ligado 0000011C

Symbol: leds_pausado_ligado
   Definitions
      At line 220 in file main.s
   Uses
      At line 213 in file main.s
Comment: leds_pausado_ligado used once
operacao_normal 000000B2

Symbol: operacao_normal
   Definitions
      At line 168 in file main.s
   Uses
      At line 99 in file main.s
Comment: operacao_normal used once
operacao_pausada 000000F4

Symbol: operacao_pausada
   Definitions
      At line 200 in file main.s
   Uses
      At line 94 in file main.s
Comment: operacao_pausada used once
pisca_dezena 000001EA

Symbol: pisca_dezena
   Definitions
      At line 325 in file main.s
   Uses
      At line 184 in file main.s
      At line 233 in file main.s

pisca_led 00000158

Symbol: pisca_led
   Definitions
      At line 249 in file main.s
   Uses
      At line 180 in file main.s
Comment: pisca_led used once
pisca_unidade 000001A0

Symbol: pisca_unidade
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 287 in file main.s
   Uses
      At line 188 in file main.s
      At line 237 in file main.s

piscar_normal 000000CA

Symbol: piscar_normal
   Definitions
      At line 178 in file main.s
   Uses
      At line 193 in file main.s
Comment: piscar_normal used once
piscar_pausado 000000F8

Symbol: piscar_pausado
   Definitions
      At line 203 in file main.s
   Uses
      At line 242 in file main.s
Comment: piscar_pausado used once
select_next_led 0000008A

Symbol: select_next_led
   Definitions
      At line 141 in file main.s
   Uses
      At line 174 in file main.s
Comment: select_next_led used once
select_next_led_end 000000A4

Symbol: select_next_led_end
   Definitions
      At line 154 in file main.s
   Uses
      At line 150 in file main.s
Comment: select_next_led_end used once
select_next_passo_valor 00000054

Symbol: select_next_passo_valor
   Definitions
      At line 106 in file main.s
   Uses
      At line 97 in file main.s
Comment: select_next_passo_valor used once
select_next_valor 00000066

Symbol: select_next_valor
   Definitions
      At line 119 in file main.s
   Uses
      At line 170 in file main.s
Comment: select_next_valor used once
valor_pausado 0000012A

Symbol: valor_pausado
   Definitions
      At line 225 in file main.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 219 in file main.s
Comment: valor_pausado used once
22 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DEZENA 2000000F

Symbol: DEZENA
   Definitions
      At line 16 in file main.s
   Uses
      At line 68 in file main.s
      At line 122 in file main.s
      At line 327 in file main.s

FALSE 00000000

Symbol: FALSE
   Definitions
      At line 13 in file main.s
   Uses
      At line 81 in file main.s
      At line 149 in file main.s
      At line 215 in file main.s
      At line 270 in file main.s
      At line 308 in file main.s
      At line 346 in file main.s

LED_ATUAL 2000004B

Symbol: LED_ATUAL
   Definitions
      At line 19 in file main.s
   Uses
      At line 76 in file main.s
      At line 142 in file main.s
      At line 251 in file main.s

LED_CRESCENTE 2000002D

Symbol: LED_CRESCENTE
   Definitions
      At line 18 in file main.s
   Uses
      At line 80 in file main.s
      At line 144 in file main.s

PASSO_VALOR 2000001E

Symbol: PASSO_VALOR
   Definitions
      At line 17 in file main.s
   Uses
      At line 72 in file main.s
      At line 107 in file main.s
      At line 124 in file main.s

TRUE 00000001

Symbol: TRUE
   Definitions
      At line 12 in file main.s
   Uses
      At line 146 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 153 in file main.s
      At line 155 in file main.s
      At line 221 in file main.s
      At line 258 in file main.s
      At line 296 in file main.s
      At line 334 in file main.s

UNIDADE 20000000

Symbol: UNIDADE
   Definitions
      At line 15 in file main.s
   Uses
      At line 64 in file main.s
      At line 120 in file main.s
      At line 289 in file main.s

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 46 in file main.s
   Uses
      At line 61 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 59 in file main.s
Comment: PLL_Init used once
PortF_Output 00000000

Symbol: PortF_Output
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: PortF_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 48 in file main.s
   Uses
      At line 85 in file main.s
Comment: PortJ_Input used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 60 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 45 in file main.s
   Uses
      At line 229 in file main.s
      At line 266 in file main.s
      At line 278 in file main.s
      At line 304 in file main.s
      At line 316 in file main.s
      At line 342 in file main.s
      At line 354 in file main.s

select_dig_DS 00000000

Symbol: select_dig_DS
   Definitions
      At line 53 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Uses
      At line 292 in file main.s
      At line 330 in file main.s

select_leds 00000000

Symbol: select_leds
   Definitions
      At line 49 in file main.s
   Uses
      At line 208 in file main.s
      At line 254 in file main.s

set_DS1_ON 00000000

Symbol: set_DS1_ON
   Definitions
      At line 51 in file main.s
   Uses
      At line 336 in file main.s
      At line 348 in file main.s

set_DS2_ON 00000000

Symbol: set_DS2_ON
   Definitions
      At line 52 in file main.s
   Uses
      At line 298 in file main.s
      At line 310 in file main.s

set_leds 00000000

Symbol: set_leds
   Definitions
      At line 50 in file main.s
   Uses
      At line 217 in file main.s
      At line 223 in file main.s
      At line 260 in file main.s
      At line 272 in file main.s

11 symbols
377 symbols in table
